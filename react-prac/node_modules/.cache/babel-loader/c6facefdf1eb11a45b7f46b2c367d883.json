{"ast":null,"code":"const initialState = {\n  count: 42\n}; // action is responsible for returning the new state.\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case \"INCREMENT\":\n      return {\n        count: state.count + 1\n      };\n\n    case \"DECREMENT\":\n      return {\n        count: state.count - 1\n      };\n    // just in case state is not handeled\n    // defaults back to old state.\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/andrew/Desktop/test/react-prac/src/components/counter-redux/reducer.js"],"names":["initialState","count","reducer","state","action","type"],"mappings":"AACA,MAAMA,YAAY,GAAE;AAChBC,EAAAA,KAAK,EAAE;AADS,CAApB,C,CAIA;;AACA,eAAe,SAASC,OAAT,CAAiBC,KAAK,GAAEH,YAAxB,EAAsCI,MAAtC,EAA6C;AACxD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,WAAL;AACI,aAAM;AACJJ,QAAAA,KAAK,EAAGE,KAAK,CAACF,KAAN,GAAc;AADlB,OAAN;;AAGJ,SAAK,WAAL;AACQ,aAAM;AACJA,QAAAA,KAAK,EAAGE,KAAK,CAACF,KAAN,GAAc;AADlB,OAAN;AAGJ;AACA;;AACA;AACI,aAAOE,KAAP;AAZZ;AAcD","sourcesContent":["\nconst initialState ={\n    count: 42\n}\n\n// action is responsible for returning the new state.\nexport default function reducer(state =initialState, action){\n    switch(action.type){\n        case \"INCREMENT\":\n            return{\n              count:  state.count + 1\n            }\n        case \"DECREMENT\":\n                return{\n                  count:  state.count - 1 \n                }\n            // just in case state is not handeled\n            // defaults back to old state.\n            default:\n                return state;\n    }\n  }\n  "]},"metadata":{},"sourceType":"module"}