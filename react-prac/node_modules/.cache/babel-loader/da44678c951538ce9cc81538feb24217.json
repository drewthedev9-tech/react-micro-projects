{"ast":null,"code":"var _jsxFileName = \"/home/andrew/Desktop/test/src/components/todolist.jsx\";\nimport React, { Component } from 'react';\nimport ToDoForm from \"./todoform\";\nimport Todo from \"./todo\";\n/*\n/*\n  TodoMVC\n  1. add todo\n  2. display todos\n  3. cross off todo\n  4. show number of active todos\n  5. filter all/active/complete\n  6. delete todo\n  7. delete all complete\n    7.1 only show if atleast one is complete\n  8. button to toggle all on/off\n*/\n\nclass TodoList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [],\n      todoToShow: \"all\"\n    };\n\n    this.addTodo = todo => {\n      //  cloning vurrent state to do and adding(todo oin function) todos\n      // in state\n      const newTodos = [todo, ...this.state.todos];\n      this.setState({\n        todos: newTodos\n      });\n    };\n\n    this.handletoggleComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          // suppose to update\n          if (todo.id === id) {\n            return {\n              id: todo.id,\n              text: todo.text,\n              complete: !todo.complete\n            };\n          } else {\n            return todo;\n          }\n        })\n      });\n    };\n  }\n\n  render() {\n    let todos = [];\n\n    if (this.state.todoToShow === 'all') {\n      todos = this.state.todos;\n    }\n\n    const {\n      handletoggleComplete\n    } = this;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ToDoForm, {\n      onSubmit: this.addTodo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }), this.state.todos.map(todo => /*#__PURE__*/React.createElement(Todo, {\n      key: todo.id // passing a functin down to the oncick of todo component.\n      ,\n      toggleComplete: () => handletoggleComplete(todo.id),\n      todo: todo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"todos left : \", this.state.todos.filter(todo => todo.complete).length), /*#__PURE__*/React.createElement(\"buton\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, \"all\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \"active\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, \"complete\"));\n  }\n\n}\n\nexport default TodoList;","map":{"version":3,"sources":["/home/andrew/Desktop/test/src/components/todolist.jsx"],"names":["React","Component","ToDoForm","Todo","TodoList","state","todos","todoToShow","addTodo","todo","newTodos","setState","handletoggleComplete","id","map","text","complete","render","filter","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA;;;;;;;;;;;;;;AAcA,MAAMC,QAAN,SAAuBH,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BI,KAD6B,GACrB;AACJC,MAAAA,KAAK,EAAC,EADF;AAEJC,MAAAA,UAAU,EAAC;AAFP,KADqB;;AAAA,SAM5BC,OAN4B,GAMlBC,IAAD,IAAQ;AACd;AACA;AACC,YAAMC,QAAQ,GAAI,CAACD,IAAD,EAAO,GAAG,KAAKJ,KAAL,CAAWC,KAArB,CAAlB;AACA,WAAKK,QAAL,CAAc;AACXL,QAAAA,KAAK,EAAEI;AADI,OAAd;AAGH,KAb2B;;AAAA,SAe5BE,oBAf4B,GAeNC,EAAD,IAAM;AACxB,WAAKF,QAAL,CAAc;AACVL,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBQ,GAAjB,CAAqBL,IAAI,IAAE;AAC9B;AACA,cAAGA,IAAI,CAACI,EAAL,KAAYA,EAAf,EAAkB;AACd,mBAAO;AACHA,cAAAA,EAAE,EAAEJ,IAAI,CAACI,EADN;AAEHE,cAAAA,IAAI,EAAEN,IAAI,CAACM,IAFR;AAGHC,cAAAA,QAAQ,EAAE,CAACP,IAAI,CAACO;AAHb,aAAP;AAKH,WAND,MAMM;AACF,mBAAOP,IAAP;AACH;AACJ,SAXM;AADG,OAAd;AAcF,KA9B2B;AAAA;;AA+B7BQ,EAAAA,MAAM,GAAG;AACb,QAAIX,KAAK,GAAE,EAAX;;AAEA,QAAI,KAAKD,KAAL,CAAWE,UAAX,KAAyB,KAA7B,EAAmC;AACnCD,MAAAA,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAnB;AACS;;AAED,UAAM;AAACM,MAAAA;AAAD,QAAyB,IAA/B;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,QAAD;AACA,MAAA,QAAQ,EAAE,KAAKJ,OADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAIC,KAAKH,KAAL,CAAWC,KAAX,CAAiBQ,GAAjB,CAAqBL,IAAI,iBACtB,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACI,EAAhB,CACA;AADA;AAEA,MAAA,cAAc,EAAE,MAAID,oBAAoB,CAACH,IAAI,CAACI,EAAN,CAFxC;AAGA,MAAA,IAAI,EAAEJ,IAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAJD,eAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACkB,KAAKJ,KAAL,CAAWC,KAAX,CAAiBY,MAAjB,CAAwBT,IAAI,IAAIA,IAAI,CAACO,QAArC,EAA+CG,MADjE,CAXA,eAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAdJ,eAeI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ,eAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhBJ,CADJ;AAsBH;;AA7D4B;;AAgEjC,eAAef,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport ToDoForm from \"./todoform\";\nimport Todo from \"./todo\";\n\n/*\n/*\n  TodoMVC\n  1. add todo\n  2. display todos\n  3. cross off todo\n  4. show number of active todos\n  5. filter all/active/complete\n  6. delete todo\n  7. delete all complete\n    7.1 only show if atleast one is complete\n  8. button to toggle all on/off\n*/\n\nclass TodoList extends Component {\n    state = { \n        todos:[],\n        todoToShow:\"all\"\n     }\n\n     addTodo =(todo)=>{\n        //  cloning vurrent state to do and adding(todo oin function) todos\n        // in state\n         const newTodos  = [todo, ...this.state.todos];\n         this.setState({\n            todos: newTodos\n         })\n     }\n\n     handletoggleComplete=(id)=>{\n        this.setState({\n            todos: this.state.todos.map(todo=>{\n                // suppose to update\n                if(todo.id === id){\n                    return {\n                        id: todo.id,\n                        text: todo.text,\n                        complete: !todo.complete\n                    }\n                } else{\n                    return todo;\n                }\n            })\n        })\n     }\n    render() { \nlet todos =[];\n\nif (this.state.todoToShow ==='all'){\ntodos = this.state.todos;\n        }\n\n        const {handletoggleComplete} = this\n        return ( \n            <div>\n            <ToDoForm \n            onSubmit={this.addTodo}\n            />\n            {this.state.todos.map(todo=>(\n                <Todo key={todo.id} \n                // passing a functin down to the oncick of todo component.\n                toggleComplete={()=>handletoggleComplete(todo.id)}\n                todo={todo}\n                />\n            ))}\n            <div>\n                todos left : {this.state.todos.filter(todo => todo.complete).length}\n            </div>\n                <buton>all</buton>\n                <button>active</button>\n                <button>complete</button>\n            </div>\n         );\n           \n            \n    }\n}\n \nexport default TodoList;"]},"metadata":{},"sourceType":"module"}